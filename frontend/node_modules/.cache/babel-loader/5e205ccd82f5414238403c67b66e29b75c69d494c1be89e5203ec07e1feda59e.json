{"ast":null,"code":"var _jsxFileName = \"D:\\\\Szkola\\\\S 5 - komputer\\\\TIN\\\\Projekt\\\\TinProject\\\\frontend\\\\src\\\\components\\\\UserList.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserList = () => {\n  _s();\n  const [users, setUsers] = useState([]);\n\n  // const fetchUsers = async () => {\n  //     try {\n  //         const response = await fetch('http://localhost/users');\n  //         const users = await response.json();\n  //         return users;\n  //     } catch (error) {\n  //         console.error('Błąd pobierania danych użytkowników:', error);\n  //         return [];\n  //     }\n  // };\n\n  useEffect(() => {\n    // Tutaj możesz umieścić logikę pobierania użytkowników z serwera\n    // np. wywołując funkcję fetchUsers().\n\n    // Przykład tymczasowy z hardcoded danymi\n    const hardcodedUsers = [{\n      \"id\": 1,\n      \"imie\": \"John\",\n      \"nazwisko\": \"Doe\",\n      \"rodzaj\": \"Klient\",\n      \"adres\": \"ul. Example 123\"\n    }, {\n      \"id\": 2,\n      \"imie\": \"Jane\",\n      \"nazwisko\": \"Smith\",\n      \"rodzaj\": \"Administrator\",\n      \"adres\": \"ul. Sample 456\"\n    }, {\n      \"id\": 3,\n      \"imie\": \"Bob\",\n      \"nazwisko\": \"Johnson\",\n      \"rodzaj\": \"Klient\",\n      \"adres\": \"ul. Test 789\"\n    }];\n    setUsers(hardcodedUsers);\n  });\n  const generateUserListHTML = () => {\n    return users.map(user => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"ID: \", user.id]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Imi\\u0119: \", user.imie]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Nazwisko: \", user.nazwisko]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Rodzaj: \", user.rodzaj]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), user.rodzaj === 'Klient' ? /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => deleteUser(user.id),\n        children: \"Usu\\u0144\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 45\n      }, this) : '', /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Adres: \", user.adres]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this)]\n    }, user.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this));\n  };\n  const deleteUser = userId => {\n    // Tutaj możesz umieścić logikę usuwania użytkownika\n    console.log(`Usuwanie użytkownika o ID: ${userId}`);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: generateUserListHTML()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 9\n  }, this);\n};\n_s(UserList, \"JadZszbqna06PpJs9hMo7Hl/LOY=\");\n_c = UserList;\nexport default UserList;\nvar _c;\n$RefreshReg$(_c, \"UserList\");","map":{"version":3,"names":["useState","useEffect","jsxDEV","_jsxDEV","UserList","_s","users","setUsers","hardcodedUsers","generateUserListHTML","map","user","children","id","fileName","_jsxFileName","lineNumber","columnNumber","imie","nazwisko","rodzaj","onClick","deleteUser","adres","userId","console","log","_c","$RefreshReg$"],"sources":["D:/Szkola/S 5 - komputer/TIN/Projekt/TinProject/frontend/src/components/UserList.js"],"sourcesContent":["import { useState, useEffect } from 'react';\r\nconst UserList = () =>{\r\n    const  [users, setUsers] = useState([]);\r\n\r\n\r\n    // const fetchUsers = async () => {\r\n    //     try {\r\n    //         const response = await fetch('http://localhost/users');\r\n    //         const users = await response.json();\r\n    //         return users;\r\n    //     } catch (error) {\r\n    //         console.error('Błąd pobierania danych użytkowników:', error);\r\n    //         return [];\r\n    //     }\r\n    // };\r\n\r\n    useEffect(() => {\r\n        // Tutaj możesz umieścić logikę pobierania użytkowników z serwera\r\n        // np. wywołując funkcję fetchUsers().\r\n\r\n        // Przykład tymczasowy z hardcoded danymi\r\n        const hardcodedUsers = [\r\n            {\r\n                \"id\": 1,\r\n                \"imie\": \"John\",\r\n                \"nazwisko\": \"Doe\",\r\n                \"rodzaj\": \"Klient\",\r\n                \"adres\": \"ul. Example 123\"\r\n            },\r\n            {\r\n                \"id\": 2,\r\n                \"imie\": \"Jane\",\r\n                \"nazwisko\": \"Smith\",\r\n                \"rodzaj\": \"Administrator\",\r\n                \"adres\": \"ul. Sample 456\"\r\n            },\r\n            {\r\n                \"id\": 3,\r\n                \"imie\": \"Bob\",\r\n                \"nazwisko\": \"Johnson\",\r\n                \"rodzaj\": \"Klient\",\r\n                \"adres\": \"ul. Test 789\"\r\n            }\r\n        ];\r\n\r\n        setUsers(hardcodedUsers);\r\n    });\r\n\r\n\r\n    const generateUserListHTML = () => {\r\n        return users.map((user) => (\r\n            <div key={user.id}>\r\n                <p>ID: {user.id}</p>\r\n                <p>Imię: {user.imie}</p>\r\n                <p>Nazwisko: {user.nazwisko}</p>\r\n                <p>Rodzaj: {user.rodzaj}</p>\r\n                {user.rodzaj === 'Klient' ? <button onClick={() => deleteUser(user.id)}>Usuń</button> : ''}\r\n                <p>Adres: {user.adres}</p>\r\n            </div>\r\n        ));\r\n    };\r\n\r\n    const deleteUser = (userId) => {\r\n        // Tutaj możesz umieścić logikę usuwania użytkownika\r\n        console.log(`Usuwanie użytkownika o ID: ${userId}`);\r\n    };\r\n\r\n\r\n    return (\r\n        <div>\r\n            {generateUserListHTML()}\r\n        </div>\r\n    );\r\n}\r\nexport default UserList"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAC5C,MAAMC,QAAQ,GAAGA,CAAA,KAAK;EAAAC,EAAA;EAClB,MAAO,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;;EAGvC;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEAC,SAAS,CAAC,MAAM;IACZ;IACA;;IAEA;IACA,MAAMO,cAAc,GAAG,CACnB;MACI,IAAI,EAAE,CAAC;MACP,MAAM,EAAE,MAAM;MACd,UAAU,EAAE,KAAK;MACjB,QAAQ,EAAE,QAAQ;MAClB,OAAO,EAAE;IACb,CAAC,EACD;MACI,IAAI,EAAE,CAAC;MACP,MAAM,EAAE,MAAM;MACd,UAAU,EAAE,OAAO;MACnB,QAAQ,EAAE,eAAe;MACzB,OAAO,EAAE;IACb,CAAC,EACD;MACI,IAAI,EAAE,CAAC;MACP,MAAM,EAAE,KAAK;MACb,UAAU,EAAE,SAAS;MACrB,QAAQ,EAAE,QAAQ;MAClB,OAAO,EAAE;IACb,CAAC,CACJ;IAEDD,QAAQ,CAACC,cAAc,CAAC;EAC5B,CAAC,CAAC;EAGF,MAAMC,oBAAoB,GAAGA,CAAA,KAAM;IAC/B,OAAOH,KAAK,CAACI,GAAG,CAAEC,IAAI,iBAClBR,OAAA;MAAAS,QAAA,gBACIT,OAAA;QAAAS,QAAA,GAAG,MAAI,EAACD,IAAI,CAACE,EAAE;MAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACpBd,OAAA;QAAAS,QAAA,GAAG,aAAM,EAACD,IAAI,CAACO,IAAI;MAAA;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACxBd,OAAA;QAAAS,QAAA,GAAG,YAAU,EAACD,IAAI,CAACQ,QAAQ;MAAA;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAChCd,OAAA;QAAAS,QAAA,GAAG,UAAQ,EAACD,IAAI,CAACS,MAAM;MAAA;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EAC3BN,IAAI,CAACS,MAAM,KAAK,QAAQ,gBAAGjB,OAAA;QAAQkB,OAAO,EAAEA,CAAA,KAAMC,UAAU,CAACX,IAAI,CAACE,EAAE,CAAE;QAAAD,QAAA,EAAC;MAAI;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,GAAG,EAAE,eAC1Fd,OAAA;QAAAS,QAAA,GAAG,SAAO,EAACD,IAAI,CAACY,KAAK;MAAA;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA,GANpBN,IAAI,CAACE,EAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAOZ,CACR,CAAC;EACN,CAAC;EAED,MAAMK,UAAU,GAAIE,MAAM,IAAK;IAC3B;IACAC,OAAO,CAACC,GAAG,CAAE,8BAA6BF,MAAO,EAAC,CAAC;EACvD,CAAC;EAGD,oBACIrB,OAAA;IAAAS,QAAA,EACKH,oBAAoB,CAAC;EAAC;IAAAK,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACtB,CAAC;AAEd,CAAC;AAAAZ,EAAA,CAxEKD,QAAQ;AAAAuB,EAAA,GAARvB,QAAQ;AAyEd,eAAeA,QAAQ;AAAA,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}